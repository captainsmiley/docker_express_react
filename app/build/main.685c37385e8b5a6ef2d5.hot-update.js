webpackHotUpdate("main",{

/***/ "./src/client/components/NmapScanner.jsx":
/*!***********************************************!*\
  !*** ./src/client/components/NmapScanner.jsx ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = __webpack_require__(/*! react */ \"../dep/node_modules/react/index.js\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _ScanResult = __webpack_require__(/*! ./ScanResult.jsx */ \"./src/client/components/ScanResult.jsx\");\n\nvar _ScanResult2 = _interopRequireDefault(_ScanResult);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar NmapScanner = function (_React$Component) {\n  _inherits(NmapScanner, _React$Component);\n\n  function NmapScanner(props) {\n    _classCallCheck(this, NmapScanner);\n\n    var _this = _possibleConstructorReturn(this, (NmapScanner.__proto__ || Object.getPrototypeOf(NmapScanner)).call(this, props));\n\n    _this.state = {\n      nmapc: {\n        command: '',\n        args: ['']\n      },\n      nmap_state: 'not startedd'\n      //source :\n    };\n\n    _this.handleChange = _this.handleChange.bind(_this);\n    _this.handleSubmit = _this.handleSubmit.bind(_this);\n    _this.source = new EventSource('/tgtest/stream/');\n    _this.handleServerEventMsg = _this.handleServerEventMsg.bind(_this);\n\n    return _this;\n  }\n\n  _createClass(NmapScanner, [{\n    key: 'handleChange',\n    value: function handleChange(e) {\n      var nmapc = this.state.nmapc;\n      if (e.target.name === 'Command') {\n        nmapc.command = e.target.value;\n      } else if (e.target.name === 'Arg') {\n        nmapc.args[0] = e.target.value;\n      }\n      this.setState({\n        nmapc: nmapc\n      });\n    }\n  }, {\n    key: 'handleServerEventMsg',\n    value: function handleServerEventMsg(e) {\n      console.log(e.data);\n      var v = JSON.parse(e.data);\n\n      this.setState({\n        nmap_state: v\n      });\n    }\n  }, {\n    key: 'handleSubmit',\n    value: function handleSubmit(e) {\n      //alert('sub:' + this.state.nmapc.command +' '+ this.state.nmapc.args[0]);\n      postData('/tgtest/scan/', this.state.nmapc).then(function (data) {\n        return console.log(data);\n      }).catch(function (error) {\n        return console.error(error);\n      });\n      e.preventDefault();\n    }\n  }, {\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      if (!!window.EventSource) {\n\n        var source = this.source;\n        source.onmessage = this.handleServerEventMsg;\n        /*\r\n              source.addEventListener('message', e => {\r\n                var v = JSON.parse(e.data);\r\n        \r\n        \r\n                this.setState({\r\n                  nmap_state : v\r\n                })\r\n        \r\n              }, false) */\n\n        source.addEventListener('open', function (e) {\n          console.log(\"Connected\");\n        }, false);\n\n        source.addEventListener('error', function (e) {\n          if (e.target.readyState == EventSource.CLOSED) {\n            console.log(\"Disconnected\");\n          } else if (e.target.readyState == EventSource.CONNECTING) {\n            console.log(\"Connecting...\");\n          }\n        }, false);\n      } else {\n        console.log(\"Your browser doesn't support SSE\");\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      return _react2.default.createElement(\n        'div',\n        null,\n        _react2.default.createElement(\n          'form',\n          { onSubmit: this.handleSubmit },\n          _react2.default.createElement(\n            'label',\n            null,\n            ' Command:',\n            _react2.default.createElement('input', { type: 'text', value: this.state.nmapc.command,\n              name: 'Commands',\n              onChange: this.handleChange })\n          ),\n          _react2.default.createElement(\n            'label',\n            null,\n            ' Arg:',\n            _react2.default.createElement('input', { type: 'text', value: this.state.nmapc.args[0],\n              name: 'Arg',\n              onChange: this.handleChange })\n          ),\n          _react2.default.createElement('input', { type: 'submit', value: 'Start scan' })\n        ),\n        _react2.default.createElement(NmapState, { nmap_state: this.state.nmap_state }),\n        _react2.default.createElement(_ScanResult2.default, { ScanStatus: this.state.nmap_state })\n      );\n    }\n  }]);\n\n  return NmapScanner;\n}(_react2.default.Component);\n\nfunction NmapState(props) {\n  return _react2.default.createElement(\n    'div',\n    null,\n    _react2.default.createElement(\n      'p',\n      null,\n      ' ',\n      props.nmap_state,\n      ' '\n    )\n  );\n}\n\nfunction postData(url, data) {\n  // Default options are marked with *\n  return fetch(url, {\n    body: JSON.stringify(data), // must match 'Content-Type' header\n    cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n    //credentials: 'same-origin', // include, same-origin, *omit\n    headers: {\n      //  'user-agent': 'Mozilla/4.0 MDN Example',\n      'content-type': 'application/json'\n    },\n    method: 'POST' // *GET, POST, PUT, DELETE, etc.\n    //mode: 'cors', // no-cors, cors, *same-origin\n    //redirect: 'follow', // *manual, follow, error\n    //referrer: 'no-referrer', // *client, no-referrer\n  }).then(function (response) {\n    return response.json();\n  }); // parses response to JSON\n}\nmodule.exports = NmapScanner;\n\n//# sourceURL=webpack:///./src/client/components/NmapScanner.jsx?");

/***/ })

})